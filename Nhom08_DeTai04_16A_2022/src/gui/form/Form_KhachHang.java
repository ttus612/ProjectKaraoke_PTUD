/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.form;

import dao.Dao_KhachHang;
import entity.KhachHang;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author giahy
 */
public class Form_KhachHang extends javax.swing.JPanel {

    private DefaultTableModel modalTableKhachHang;
    private ArrayList<KhachHang> dsKhachHang;
    private Dao_KhachHang dao_KhachHang;
    private SimpleDateFormat dtf;
    private Set<String> sdt;
    private Set<String> ten;
    private Set<String> ma;
    private Set<String> cccd;

    /**
     * Creates new form NewJPanel
     */
    public Form_KhachHang() {
        dtf = new SimpleDateFormat("yyyy-MM-dd"); 
        
        dsKhachHang = new ArrayList<KhachHang>();
        dao_KhachHang = new Dao_KhachHang();
        initComponents();
        
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMonthChooserBeanInfo1 = new com.toedter.calendar.JMonthChooserBeanInfo();
        jPanel13 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        txtTenKhachHang = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        chkGioiTinh = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        txtSDTKH = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNgaySinh = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnTimKH = new javax.swing.JButton();
        btnThemKH = new javax.swing.JButton();
        btnXoaKH = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnSuaKH = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(121, 87, 142))); // NOI18N

        tblKhachHang.setBackground(new java.awt.Color(238, 239, 243));
        tblKhachHang.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Họ và tên", "Ngày sinh", "Giới tính", "Địa chỉ", "CMND/CCCD", "Số điện thoại"
            }
        ));
        tblKhachHang.setRowHeight(30);
        tblKhachHang.setSelectionBackground(new java.awt.Color(200, 175, 228));
        modalTableKhachHang = (DefaultTableModel) tblKhachHang.getModel();
        dsKhachHang = dao_KhachHang.getAllKhachHang();
        themDuLieuVaoBang(dsKhachHang);
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKhachHang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(121, 87, 142))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Mã khách hàng :");

        txtMaKH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtMaKH.setForeground(new java.awt.Color(51, 51, 51));
        txtMaKH.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(192, 191, 191)));
        txtMaKH.setEnabled(false);
        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMaKH, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        txtTenKhachHang.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtTenKhachHang.setForeground(new java.awt.Color(51, 51, 51));
        txtTenKhachHang.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(192, 191, 191)));
        txtTenKhachHang.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText("Giới tính:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Họ và tên:");

        chkGioiTinh.setText("Nữ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTenKhachHang)
                .addGap(46, 46, 46)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(chkGioiTinh)
                .addGap(233, 233, 233))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(chkGioiTinh)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );

        txtSDTKH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtSDTKH.setForeground(new java.awt.Color(51, 51, 51));
        txtSDTKH.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(192, 191, 191)));
        txtSDTKH.setEnabled(false);
        txtSDTKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSDTKHKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Ngày sinh:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Số điện thoại:");

        txtNgaySinh.setDateFormatString("yyyy-MM-dd");
        txtNgaySinh.setEnabled(false);
        txtNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSDTKH)
                .addGap(31, 31, 31)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8)
                    .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("Địa chỉ:");

        txtDiaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtDiaChi.setForeground(new java.awt.Color(51, 51, 51));
        txtDiaChi.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(192, 191, 191)));
        txtDiaChi.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addGap(24, 24, 24))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setText("CMND/CCCD:");

        txtCCCD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtCCCD.setForeground(new java.awt.Color(51, 51, 51));
        txtCCCD.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 1, 1, new java.awt.Color(192, 191, 191)));
        txtCCCD.setEnabled(false);
        txtCCCD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCCCDKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(txtCCCD, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                        .addGap(24, 24, 24))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCCCD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Các chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(121, 87, 142))); // NOI18N

        btnTimKH.setBackground(new java.awt.Color(177, 100, 252));
        btnTimKH.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnTimKH.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/search.png"))); // NOI18N
        btnTimKH.setText("Tìm");
        btnTimKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKHActionPerformed(evt);
            }
        });

        btnThemKH.setBackground(new java.awt.Color(177, 100, 252));
        btnThemKH.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnThemKH.setForeground(new java.awt.Color(255, 255, 255));
        btnThemKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/buy-online.png"))); // NOI18N
        btnThemKH.setText("Thêm");
        btnThemKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKHActionPerformed(evt);
            }
        });

        btnXoaKH.setBackground(new java.awt.Color(177, 100, 252));
        btnXoaKH.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnXoaKH.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/huyPhongCho.png"))); // NOI18N
        btnXoaKH.setText("Xóa");
        btnXoaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaKHActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(177, 100, 252));
        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/reset.png"))); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSuaKH.setBackground(new java.awt.Color(177, 100, 252));
        btnSuaKH.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSuaKH.setForeground(new java.awt.Color(255, 255, 255));
        btnSuaKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/edit.png"))); // NOI18N
        btnSuaKH.setText("Sửa");
        btnSuaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaKHActionPerformed(evt);
            }
        });

        btnLuu.setBackground(new java.awt.Color(177, 100, 252));
        btnLuu.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnLuu.setForeground(new java.awt.Color(255, 255, 255));
        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icon/save.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnXoaKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(btnTimKH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThemKH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaKH, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLuu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTimKH, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnThemKH, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSuaKH, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnXoaKH, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addGap(15, 15, 15)
                .addComponent(btnLuu, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(204, 153, 255));

        jLabel17.setBackground(new java.awt.Color(121, 87, 142));
        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(121, 87, 142));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/img/khachHang.png"))); // NOI18N
        jLabel17.setText("Quản lí khách hàng");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(110, 110, 110))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKHActionPerformed
        if(btnThemKH.getText().equals("Thêm")){
            moKhoaTextField(true);
            btnThemKH.setText("Hủy");
        }else if(btnThemKH.getText().equals("Hủy")){
            btnThemKH.setText("Thêm");
            moKhoaTextField(false);
            lamMoiTextField();
        }
        
    
    }//GEN-LAST:event_btnThemKHActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        lamMoiTextField();
    }//GEN-LAST:event_btnResetActionPerformed

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        int row = tblKhachHang.getSelectedRow();
        txtMaKH.setText(modalTableKhachHang.getValueAt(row, 0).toString());
        txtTenKhachHang.setText(modalTableKhachHang.getValueAt(row, 1).toString());
        txtNgaySinh.setDate(Date.valueOf(modalTableKhachHang.getValueAt(row, 2).toString()));
        chkGioiTinh.setSelected(modalTableKhachHang.getValueAt(row, 3).toString() == "Nữ" ? true:false);
        txtDiaChi.setText(modalTableKhachHang.getValueAt(row, 4).toString());
        txtCCCD.setText(modalTableKhachHang.getValueAt(row, 5).toString());
        txtSDTKH.setText(modalTableKhachHang.getValueAt(row, 6).toString());
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnXoaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaKHActionPerformed
        int row = tblKhachHang.getSelectedRow();
        if(row!=-1){
            int selectOption = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa khách hàng này hay không?", "Thông báo", JOptionPane.YES_NO_CANCEL_OPTION);
            if(selectOption==JOptionPane.YES_OPTION){
                if(dao_KhachHang.xoaKhachHang(txtMaKH.getText())){
                modalTableKhachHang.removeRow(row);
                lamMoiTextField();
                JOptionPane.showConfirmDialog(null, "Xóa khách hàng thành công", "Thông báo", JOptionPane.OK_OPTION);
                }
            }
            
        }else
            JOptionPane.showConfirmDialog(null, "Chọn khách hàng muốn xóa", "Thông báo", JOptionPane.OK_OPTION);
    }//GEN-LAST:event_btnXoaKHActionPerformed

    private void txtSDTKHKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSDTKHKeyReleased
//        Set<String> s;
//        s = new TreeSet<String>();
//        ArrayList<String> lstSDT = getSoDienThoai();
//        for (String sdt : lstSDT) {
//            s.add(sdt);
//        }
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE){
            
        }else{
            String to_check = txtSDTKH.getText();
            int to_check_len = to_check.length();
            for (String data : sdt) {
                String check_from_data ="";
                for (int i = 0; i < to_check_len; i++) {
                    if(to_check_len<=data.length()){
                        check_from_data = check_from_data+data.charAt(i);
                    }
                }
                if(check_from_data.equals(to_check)){
                    txtSDTKH.setText(data);
                    txtSDTKH.setSelectionStart(to_check_len);
                    txtSDTKH.setSelectionEnd(data.length());
                    break;
                }
            }
        }
    }//GEN-LAST:event_txtSDTKHKeyReleased

    private void btnTimKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKHActionPerformed
        btnLuu.setText("Hủy");
        lamMoiTextField();
        if(btnLuu.getText().equals("Hủy")){
            txtMaKH.setEnabled(true);
            txtTenKhachHang.setEnabled(true);
            txtSDTKH.setEnabled(true);
            txtCCCD.setEnabled(true);
        
            
            getSoDienThoai();
            getCCCD();
            
            //Tìm theo sdt
            if(txtSDTKH.getText().trim().length()>0 && txtMaKH.getText().trim().length()==0 
                    && txtCCCD.getText().trim().length()==0 && txtTenKhachHang.getText().trim().length()<=0){
                xoaBang();
                KhachHang kh = dao_KhachHang.getKhachHangTheoSDT(txtSDTKH.getText());
                themDongVaoBang(kh);
            }
            
            //Tìm theo mã
            else if(txtSDTKH.getText().trim().length()<=0 && txtMaKH.getText().trim().length()>0 
                    && txtCCCD.getText().trim().length()<=0 && txtTenKhachHang.getText().trim().length()<=0){
                xoaBang();
                KhachHang ks = dao_KhachHang.getKhachHangTheoMa(txtMaKH.getText());
                if(ks==null){
                    JOptionPane.showConfirmDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.OK_OPTION);
                }else{
                    themDongVaoBang(ks);
                }
            }
            
            //Tìm theo cccd
            else if(txtSDTKH.getText().trim().length()<=0 && txtMaKH.getText().trim().length()<=0 
                    && txtCCCD.getText().trim().length()>0 && txtTenKhachHang.getText().trim().length()<=0){
                xoaBang();
                KhachHang ks = dao_KhachHang.getKhachHangTheoCCCD(txtCCCD.getText());
                if(ks==null){
                    JOptionPane.showConfirmDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.OK_OPTION);
                }else{
                    themDongVaoBang(ks);
                }
            }
            
            //Tìm theo tên
            else if(txtSDTKH.getText().trim().length()<=0 && txtMaKH.getText().trim().length()<=0 
                    && txtCCCD.getText().trim().length()<=0 && txtTenKhachHang.getText().trim().length()>0){
                xoaBang();
                ArrayList<KhachHang> ks = dao_KhachHang.timKhachHangTheoTen(txtTenKhachHang.getText());
                if(ks==null){
                    JOptionPane.showConfirmDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.OK_OPTION);  
                }else {
                    themDuLieuVaoBang(ks);
                }
            } 
            //Tìm theo tên và số điện thoại
            else if(txtSDTKH.getText().trim().length()>0 && txtMaKH.getText().trim().length()==0 
                    && txtCCCD.getText().trim().length()==0 && txtTenKhachHang.getText().trim().length()>0){
                xoaBang();
                KhachHang ks = dao_KhachHang.getKhachHangTheoTenVaSDT(txtTenKhachHang.getText(), txtSDTKH.getText());
                if(ks==null){
                    JOptionPane.showConfirmDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.OK_OPTION);
                }else{
                    themDongVaoBang(ks);
                }
            }
            
            //Tìm theo tên và cccd
            else if(txtSDTKH.getText().trim().length()==0 && txtMaKH.getText().trim().length()==0 
                    && txtCCCD.getText().trim().length()>0 && txtTenKhachHang.getText().trim().length()>0){
                xoaBang();
                KhachHang ks = dao_KhachHang.getKhachHangTheoTenVaCCCD(txtTenKhachHang.getText(), txtCCCD.getText());
                if(ks==null){
                    JOptionPane.showConfirmDialog(null, "Khách hàng không tồn tại", "Thông báo", JOptionPane.OK_OPTION);
                }else{
                    themDongVaoBang(ks);
                }
            }
            //Không tìm   
            else if(txtSDTKH.getText().trim().length()==0 && txtMaKH.getText().trim().length()==0 
                    && txtCCCD.getText().trim().length()==0 && txtTenKhachHang.getText().trim().length()==0){
                xoaBang();
                dsKhachHang = dao_KhachHang.getAllKhachHang();
                themDuLieuVaoBang(dsKhachHang);
            }
        }
        
        
            
        
    }//GEN-LAST:event_btnTimKHActionPerformed

    private void btnSuaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaKHActionPerformed
        if(btnSuaKH.getText().equals("Sửa")){
            moKhoaTextField(true);
            btnSuaKH.setText("Hủy");
        }else if(btnSuaKH.getText().equals("Hủy")){
            btnSuaKH.setText("Sửa");
            moKhoaTextField(false);
            lamMoiTextField();
        }
    }//GEN-LAST:event_btnSuaKHActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if(btnThemKH.getText().equals("Hủy")){
            if(kiemTraDuLieuVao()){
            KhachHang kh = new KhachHang();
            kh = ganDuLieu();
            if(dao_KhachHang.themKhachHang(kh)){
                themDongVaoBang(kh);
                JOptionPane.showConfirmDialog(null, "Thêm khách hàng thành công", "Thông báo", JOptionPane.OK_OPTION);
            }
            else{
                JOptionPane.showConfirmDialog(null, "Thêm khách hàng không thành công", "Thông báo", JOptionPane.OK_OPTION);
            }
        }
        }else if(btnSuaKH.getText().equals("Hủy")){
            if(kiemTraDuLieuVao()){
            String makh = txtMaKH.getText();
            String tenkh = txtTenKhachHang.getText();
            String ngay = dtf.format(txtNgaySinh.getDate());
            Date ngaySinh = Date.valueOf(ngay);
            String ccccd = txtCCCD.getText();
            String diaChi = txtDiaChi.getText();
            String sdt = txtSDTKH.getText();
            boolean gioiTinh = chkGioiTinh.isSelected();
            KhachHang kh = new KhachHang(makh, tenkh, ccccd, sdt, diaChi, ngaySinh, gioiTinh);
            if(dao_KhachHang.capNhapKhachHang(kh)){
                xoaBang();
                ArrayList<KhachHang> ds = dao_KhachHang.getAllKhachHang();
                themDuLieuVaoBang(ds);
                lamMoiTextField();
                btnSuaKH.setText("Sửa");
                JOptionPane.showConfirmDialog(null, "Sửa thành công", "Thông báo", JOptionPane.OK_OPTION);
            }
        }
        }else if(btnLuu.getText().equals("Hủy")){
            btnLuu.setText("Lưu");
            xoaBang();
            dsKhachHang = dao_KhachHang.getAllKhachHang();
            themDuLieuVaoBang(dsKhachHang);
            txtMaKH.setEnabled(false);
            moKhoaTextField(false);
            lamMoiTextField();
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void txtCCCDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCCCDKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_BACK_SPACE||evt.getKeyCode()==KeyEvent.VK_DELETE){
            
        }else{
            String to_check = txtCCCD.getText();
            int to_check_len = to_check.length();
            for (String data : cccd) {
                String check_from_data ="";
                for (int i = 0; i < to_check_len; i++) {
                    if(to_check_len<=data.length()){
                        check_from_data = check_from_data+data.charAt(i);
                    }
                }
                if(check_from_data.equals(to_check)){
                    txtCCCD.setText(data);
                    txtCCCD.setSelectionStart(to_check_len);
                    txtCCCD.setSelectionEnd(data.length());
                    break;
                }
            }
        }
    }//GEN-LAST:event_txtCCCDKeyReleased

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaKHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSuaKH;
    private javax.swing.JButton btnThemKH;
    private javax.swing.JButton btnTimKH;
    private javax.swing.JButton btnXoaKH;
    private javax.swing.JCheckBox chkGioiTinh;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private com.toedter.calendar.JMonthChooserBeanInfo jMonthChooserBeanInfo1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaKH;
    private com.toedter.calendar.JDateChooser txtNgaySinh;
    private javax.swing.JTextField txtSDTKH;
    private javax.swing.JTextField txtTenKhachHang;
    // End of variables declaration//GEN-END:variables
private void themDuLieuVaoBang(ArrayList<KhachHang> dsKhachHang){
    for (KhachHang khachHang : dsKhachHang) {
        themDongVaoBang(khachHang);
    }
}
private void lamMoiTextField(){
    txtMaKH.setText("");
    txtTenKhachHang.setText("");
    txtDiaChi.setText("");
    txtCCCD.setText("");
    txtNgaySinh.setDate(null);
    txtSDTKH.setText("");
    chkGioiTinh.setSelected(false);
}
private boolean kiemTraDuLieuVao(){
    String hoten = txtTenKhachHang.getText().trim();
    String sdt = txtSDTKH.getText().trim();
    String ngaySinh = txtNgaySinh.getDate().toString().trim();
    String cccd = txtCCCD.getText().trim();
    String diaChi = txtDiaChi.getText().trim();
    
    if(hoten.length()<=0){
        showError("Họ tên khách hàng không được để trống", txtTenKhachHang);
        return false;
    }
    if(sdt.length()<=0 && !sdt.matches("[0-9]{10}")){
        showError("Số điện thoại không được để trống", txtSDTKH);
        return false;
    }
    if(ngaySinh.length()<=0 && txtNgaySinh.getDate().before(Date.valueOf(LocalDate.now()))){
        JOptionPane.showConfirmDialog(null, "Ngày sinh phải nhỏ hơn ngày hiện tại và không được để trống",
                "Báo lỗi", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    if(cccd.length()<=0 && !cccd.matches("[0-9]({09}|{12})")){
        showError("CCCD/CMND phải là ký tự số và 12 ký tự đối với CCCD và 09 ký tự với CMND", txtCCCD);
        return false;
    }
    if(diaChi.length()<=0){
        showError("Địa chỉ không được để trống", txtDiaChi);
        return false;
    }
    
    return true;
}
private KhachHang ganDuLieu(){
    String makh = phatSinhMaKH();
    String tenkh = txtTenKhachHang.getText();
    String ngay = dtf.format(txtNgaySinh.getDate());
    Date ngaySinh = Date.valueOf(ngay);
    String ccccd = txtCCCD.getText();
    String diaChi = txtDiaChi.getText();
    String sdt = txtSDTKH.getText();
    boolean gioiTinh = chkGioiTinh.isSelected();
    return new KhachHang(makh, tenkh, ccccd, sdt, diaChi, ngaySinh, gioiTinh);
}
private void showError(String message, JTextField txt){
    txt.setFocusable(true);
    JOptionPane.showConfirmDialog(null, message, "Báo lỗi", JOptionPane.ERROR_MESSAGE);
}
private String phatSinhMaKH(){
    ArrayList<KhachHang> lst = dao_KhachHang.getAllKhachHang();
    int total = dao_KhachHang.getSoLuongKhachHang();
    int stt = total+2;
//    KhachHang kh = new KhachHang("KH"+stt);
//    if(lst.contains(kh)){
//        stt+=1;
//    }
    while (lst.contains(new KhachHang("KH"+stt))) {        
        stt++;
    }
    return "KH"+stt;
}
private void xoaBang(){
    modalTableKhachHang.getDataVector().removeAllElements();
}
private void themDongVaoBang(KhachHang khachHang){
    boolean gt = khachHang.isGioiTinh();
        String gioiTinh;
        if(gt){
            gioiTinh = "Nữ";
        }
        else
            gioiTinh = "Nam";
        modalTableKhachHang.addRow(new Object[]{khachHang.getMaKhachHang(), khachHang.getHoTenKhachHang(), khachHang.getNgaySinh(),
                                    gioiTinh, khachHang.getDiaChi(), khachHang.getCCDD(), khachHang.getSoDienThoai()});
}
private void getSoDienThoai(){
    ArrayList<String> ds = dao_KhachHang.getSoDienThoai();
    sdt = new TreeSet<>();
    for (String so : ds) {
        sdt.add(so);
    }
}

private void getMaKH(){
    ArrayList<String> ds = dao_KhachHang.getMaKH();
    ma = new TreeSet<>();
    for (String so : ds) {
        ma.add(so);
    }
}
private void getCCCD(){
    ArrayList<String> ds = dao_KhachHang.getCCCD();
    cccd = new TreeSet<>();
    for (String so : ds) {
        cccd.add(so);
    }
}

private void moKhoaTextField(boolean b){
    
    txtTenKhachHang.setEnabled(b);
    txtSDTKH.setEnabled(b);
    txtNgaySinh.setEnabled(b);
    txtCCCD.setEnabled(b);
    txtDiaChi.setEnabled(b);
    
}
}
